pipeline {
    agent any
    stages {
        stage('Assume Role') {
            steps {
                container('aws-jenkins-base') {
                    script {
                        // AssumeRole 명령 실행
                        def assumeRoleCmd = """
                            ROLE_ARN="arn:aws:iam::ACCOUNT_ID:role/YOUR_ROLE_NAME"
                            SESSION_NAME="jenkins-session"
                            CREDS=\$(aws sts assume-role --role-arn \$ROLE_ARN --role-session-name \$SESSION_NAME --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" --output text)
                            echo \$CREDS
                        """
                        def creds = sh(script: assumeRoleCmd, returnStdout: true).trim().split()
                        
                        // 자격 증명 전역 변수에 저장
                        env.AWS_ACCESS_KEY_ID = creds[0]
                        env.AWS_SECRET_ACCESS_KEY = creds[1]
                        env.AWS_SESSION_TOKEN = creds[2]
                    }
                }
            }
        }

        stage('Export AWS Credentials') {
            steps {
                container('aws-jenkins-base') {
                    sh """
                        export AWS_ACCESS_KEY_ID=${env.AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${env.AWS_SECRET_ACCESS_KEY}
                        export AWS_SESSION_TOKEN=${env.AWS_SESSION_TOKEN}
                        aws sts get-caller-identity # 자격 증명 확인
                    """
                }
            }
        }

        stage('Terraform Init & Plan') {
            steps {
                container('aws-jenkins-base') {
                    sh """
                        terraform init   # Terraform 초기화
                        terraform plan   # Terraform 계획
                    """
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                container('aws-jenkins-base') {
                    sh """
                        terraform apply -auto-approve  # Terraform 적용
                    """
                }
            }
        }
    }
}
