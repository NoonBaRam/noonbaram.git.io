apiVersion: v1
kind: ConfigMap
metadata:
  name: import-cert-script
  namespace: default
data:
  import-cert-to-acm.sh: |
    #!/bin/bash
    # kubectl 설치
    if ! command -v kubectl &> /dev/null
    then
        echo "kubectl could not be found, installing..."
        curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        mv ./kubectl /usr/local/bin/kubectl
    fi

    # AWS CLI pip로 설치
    if ! command -v aws &> /dev/null
    then
        echo "aws-cli could not be found, installing via pip..."
        curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
        python3 get-pip.py
        pip3 install awscli
    fi

    # 환경 변수 설정
    LOAD_BALANCER_ARN="arn:aws:elasticloadbalancing:ap-northeast-2:859234351948:loadbalancer/app/wth-dns-test-lb/9d8309a5fab32305"
    LISTENER_ARN=$(aws elbv2 describe-listeners --load-balancer-arn "$LOAD_BALANCER_ARN" --query "Listeners[0].ListenerArn" --output text)

    # Kubernetes Secret에서 인증서 및 개인 키 추출
    kubectl get secret k8smaster-tls -o jsonpath="{.data.tls\.crt}" | base64 --decode > /tmp/tls.crt
    kubectl get secret k8smaster-tls -o jsonpath="{.data.tls\.key}" | base64 --decode > /tmp/tls.key
    kubectl get secret k8smaster-tls -o jsonpath="{.data.ca\.crt}" | base64 --decode > /tmp/root-ca.crt

    # 신규 ACM 인증서 생성
    echo "Importing new ACM certificate..."
    CERTIFICATE_ARN=$(aws acm import-certificate --certificate fileb:///tmp/tls.crt --private-key fileb:///tmp/tls.key --certificate-chain fileb:///tmp/root-ca.crt --query 'CertificateArn' --output text)
    echo "Imported new ACM certificate: $CERTIFICATE_ARN"

    # ALB 리스너에서 기존 인증서 확인
    OLD_CERTIFICATE_ARN=$(aws elbv2 describe-listeners --listener-arn "$LISTENER_ARN" --query "Listeners[0].Certificates[0].CertificateArn" --output text)

    if [ -n "$OLD_CERTIFICATE_ARN" ]; then
        # ALB 리스너에서 기존 인증서를 새 인증서로 교체
        echo "Updating ALB Listener to use new ACM certificate..."
        aws elbv2 modify-listener --listener-arn "$LISTENER_ARN" --certificates CertificateArn="$CERTIFICATE_ARN"
        echo "ALB Listener updated with new ACM certificate."

        # 기존 인증서 삭제 루프
        echo "Attempting to delete old ACM certificate..."
        while true; do
            IN_USE=$(aws elbv2 describe-listeners --listener-arn "$LISTENER_ARN" --query "Listeners[0].Certificates[?CertificateArn=='$OLD_CERTIFICATE_ARN']" --output text)

            if [ -z "$IN_USE" ]; then
                echo "Old certificate is no longer in use. Deleting..."
                sleep 20  # 대기 시간 추가
                aws acm delete-certificate --certificate-arn "$OLD_CERTIFICATE_ARN"
                if [ $? -eq 0 ]; then
                    echo "Deleted old ACM certificate: $OLD_CERTIFICATE_ARN"
                    break
                else
                    echo "Failed to delete the old certificate. Retrying..."
                fi
            else
                echo "Old certificate is still in use. Checking again in 20 seconds..."
            fi

            sleep 20
        done
    else
        echo "No existing ACM certificate found for ALB Listener."
    fi

    echo "Certificate update and deletion completed."
